{
  "version": 3,
  "sources": ["empty-module:./utils/sessions.server", "browser-route-module:root.tsx?browser", "../../app/root.tsx"],
  "sourcesContent": ["module.exports = {};", "export { default, links } from \"./root.tsx\";", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport { LinksFunction, LoaderFunction, json, redirect } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath } from\n\"@remix-run/react\";\n\n\nimport globalStylesUrl from \"~/styles/global.css\";\nimport { getUserSession } from \"./utils/sessions.server\";\nimport { useEffect } from \"react\";\n\n\nexport const links: LinksFunction = () => [\n//...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\n{ rel: \"stylesheet\", href: globalStylesUrl },\n{ rel: \"stylesheet\", href: \"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" }];\n\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const [token, user, puesto] = await getUserSession(request);\n  let root = \"\";\n  if (token) {\n    switch (puesto) {\n\n      case 'Admin':\n        root = 'admin';\n        break;\n      case 'Ventas':\n        root = 'ventas';\n        break;\n      case 'Recursos_Humanos':\n        root = 'rh';\n        break;\n      case 'Inventario':\n        root = 'inventario';\n        break;\n      case 'Finanzas':\n        root = 'finanzas';\n        break;\n    }\n\n    return { root };\n  }\n  if (request.url.includes('/login') || request.url.includes('/asistencia')) {\n    return { root: null };\n  }\n  return redirect('/login');\n};\n\nexport default function App() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const data = useLoaderData<typeof loader>();\n\n  useEffect(() => {\n    if (!location.pathname.includes(data.root) && data.root != null) {\n      navigate(`/${data.root}`);\n    }\n  }, [location]);\n\n  return (\n    <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html>);\n\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACAlB;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAoBA,sBAA+B;AAC/B,IAAAA,gBAA0B;AAsDlB;AAnDD,IAAM,QAAuB,MAAM;AAAA;AAAA,EAE1C,EAAE,KAAK,cAAc,MAAM,eAAgB;AAAA,EAC3C,EAAE,KAAK,cAAc,MAAM,uHAAuH;AAAC;AAkCpI,SAAR,MAAuB;AAC5B,QAAM,WAAW,YAAY;AAC7B,QAAM,WAAW,YAAY;AAC7B,QAAM,OAAO,cAA6B;AAE1C,+BAAU,MAAM;AACd,QAAI,CAAC,SAAS,SAAS,SAAS,KAAK,IAAI,KAAK,KAAK,QAAQ,MAAM;AAC/D,eAAS,IAAI,KAAK,MAAM;AAAA,IAC1B;AAAA,EACF,GAAG,CAAC,QAAQ,CAAC;AAEb,SACE,mDAAC,UAAK,MAAK,MACT;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,mDAAC,UAAK,MAAK,YAAW,SAAQ,wCAA9B;AAAA;AAAA;AAAA;AAAA,aAAmE;AAAA,MACnE,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAJT;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,mDAAC,UACC;AAAA,yDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SAJd;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAZF;AAAA;AAAA;AAAA;AAAA,SAaA;AAEJ;",
  "names": ["import_react"]
}
